<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>


    <parent>
        <groupId>it.tidalwave.superpom</groupId>
        <artifactId>superpom</artifactId>
        <version>5.0-ALPHA-15</version>
        <relativePath />
    </parent>

    <groupId>org.rawdarkroom</groupId>
    <artifactId>jrawio</artifactId>
    <packaging>pom</packaging>
    <version>1.7-ALPHA-3-SNAPSHOT</version>
    <name>jrawio</name>
    <url>http://jrawio.rawdarkroom.org</url>
    <description>jrawio - a Java(TM) Image I/O SPI Provider for Camera Raw files</description>
    <inceptionYear>2003</inceptionYear>

    <properties>
        <tft.scm>git</tft.scm>
        <scm.repo.url>ssh://git@bitbucket.org/tidalwave/jrawio-src</scm.repo.url>
        <scm.repo.readonly.url>https://bitbucket.org/tidalwave/jrawio-src.git</scm.repo.readonly.url>
        <scm.repo.browse.url>https://bitbucket.org/tidalwave/jrawio-src/src</scm.repo.browse.url>
        <tidalwave.ci.view>jrawio</tidalwave.ci.view>
        <tidalwave.issues>JRW</tidalwave.issues>

        <thesefoolishthings.version>1.26</thesefoolishthings.version>
        <libraries.version>1.1.5</libraries.version>
        <tft.javac.source>1.5</tft.javac.source> <!-- Android compatibility -->
        <tft.javac.target>1.5</tft.javac.target>
        <tft.checkstyle.skip>true</tft.checkstyle.skip> <!-- FIXME: breaks the build -->
    </properties>

    <!-- Repeated because of http://jira.codehaus.org/browse/SCM-442 -->
    <scm>
        <connection>scm:git:${scm.repo.readonly.url}</connection>
        <developerConnection>scm:git:${scm.repo.effective.url}</developerConnection>
        <url>${scm.repo.browse.url}</url>
      <tag>HEAD</tag>
  </scm>

    <repositories>
        <repository>
            <id>maven2-thirdparty-repository.tidalwave.it</id>
            <name>Tidalwave Release Repository</name>
            <url>https://services.tidalwave.it/nexus/content/repositories/thirdparty</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>it.tidalwave.thesefoolishthings</groupId>
                <artifactId>thesefoolishthings</artifactId>
                <version>${thesefoolishthings.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.rawdarkroom</groupId>
                <artifactId>it.tidalwave.imageio.raw</artifactId>
                <version>1.7-ALPHA-3-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.rawdarkroom</groupId>
                <artifactId>codec</artifactId>
                <version>1.7-ALPHA-3-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.rawdarkroom</groupId>
                <artifactId>codec</artifactId>
                <version>1.7-ALPHA-3-SNAPSHOT</version>
                <classifier>tests</classifier>
            </dependency>
            <dependency>
                <groupId>org.rawdarkroom</groupId>
                <artifactId>processor</artifactId>
                <version>1.7-ALPHA-3-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.rawdarkroom</groupId>
                <artifactId>functional-tests</artifactId>
                <version>1.7-ALPHA-3-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>it.tidalwave.superpom</groupId>
                <artifactId>libraries</artifactId>
                <version>${libraries.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>1.3.2</version>
            </dependency>
            <dependency>                
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>it.tidalwave.thesefoolishthings</groupId>
                <artifactId>it-tidalwave-util-logging-singlelinelogformatter</artifactId>
                <version>1.1.12</version>
            </dependency>
            <dependency>
                <groupId>com.sun.media</groupId>
                <artifactId>jai_imageio</artifactId>
                <version>1.1</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.kenai.nbpwr</groupId>
            <artifactId>javax-annotation</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>it.tidalwave.thesefoolishthings</groupId>
            <artifactId>it-tidalwave-util-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>it.tidalwave.thesefoolishthings</groupId>
            <artifactId>it-tidalwave-util-logging-singlelinelogformatter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.media</groupId>
            <artifactId>jai_imageio</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>testset.cached.folder</name>
                            <value>${testset.cached.folder}</value>
                        </property>
                        <property>
                            <name>testExecutors</name>
                            <value>${testExecutors}</value>
                        </property>
                        <property>
                            <name>jrawio.dumpImageAsTIFF</name>
                            <value>${jrawio.dumpImageAsTIFF}</value>
                        </property>
                        <property>
                            <name>jrawio.dumpRasterAsText</name>
                            <value>${jrawio.dumpRasterAsText}</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dumpImageAsTIFF</id>
            <properties>
                <jrawio.dumpImageAsTIFF>true</jrawio.dumpImageAsTIFF>
            </properties>
        </profile>
    </profiles>

    <modules>
        <module>modules/codec</module>
        <module>modules/processor</module>
        <module>modules/jrawio-all</module>
        <module>functional-tests/tests</module>
        <!-- module>functional-tests/jse</module FIXME-->
        <!-- module>examples</module-->
        <!-- FIXME module>modules/jrawio-nbm</module -->
    </modules>

</project>

